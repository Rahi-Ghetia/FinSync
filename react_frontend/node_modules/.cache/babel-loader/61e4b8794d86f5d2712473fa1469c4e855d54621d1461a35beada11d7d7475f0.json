{"ast":null,"code":"var _jsxFileName = \"C:\\\\Everything\\\\College\\\\Sem III\\\\Projects\\\\FinSync\\\\react_frontend\\\\src\\\\CityFinder.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CityFinder() {\n  _s();\n  const [options, setOptions] = useState([]);\n  const [stateOptions, setStateOptions] = useState([]);\n  const [cityOptions, setCityOptions] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://raw.githubusercontent.com/dr5hn/countries-states-cities-database/master/countries%2Bstates%2Bcities.json');\n        if (!response.ok) {\n          throw new Error(\"Network error\");\n        }\n        const data = await response.json();\n        setOptions(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  function setState(element) {\n    setStateOptions([]);\n    setCityOptions([]);\n    const selectedCountry = options.find(val => val.name === element.target.value);\n    if (selectedCountry.states.length === 0) {\n      selectedCountry.states[0] = {\n        id: \"NoState\",\n        name: selectedCountry.name,\n        cities: []\n      };\n      console.log(selectedCountry.states[0]);\n    }\n    setStateOptions(selectedCountry.states);\n  }\n  function setCity(element) {\n    const selectedStates = stateOptions.find(val => val.name === element.target.value);\n    if (selectedStates.cities.length === 0) {\n      selectedStates.cities[0] = {\n        id: \"NoCity\",\n        name: selectedStates.name\n      };\n    }\n    setCityOptions(selectedStates.cities);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: ele => setState(ele),\n      className: \"Countries\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        hidden: true,\n        selected: true,\n        children: \"--- Select a Country ---\"\n      }, \"SelectCity\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), options.map(element => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: element.name\n        }, element.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: ele => setCity(ele),\n      hidden: stateOptions.length > 0 ? false : true,\n      className: \"State\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        hidden: true,\n        selected: true,\n        children: \"--- Select a State ---\"\n      }, \"SelectCity\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), stateOptions.map(element => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: element.name\n        }, element.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      hidden: cityOptions.length > 0 ? false : true,\n      className: \"City\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        hidden: true,\n        selected: true,\n        children: \"--- Select a City ---\"\n      }, \"SelectCity\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), cityOptions.map(element => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: element.name\n        }, element.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(CityFinder, \"F9Cbt4InF5IpinYcW1vgUKlEUEo=\");\n_c = CityFinder;\nexport default CityFinder;\nvar _c;\n$RefreshReg$(_c, \"CityFinder\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","CityFinder","_s","options","setOptions","stateOptions","setStateOptions","cityOptions","setCityOptions","fetchData","response","fetch","ok","Error","data","json","error","console","setState","element","selectedCountry","find","val","name","target","value","states","length","id","cities","log","setCity","selectedStates","children","onChange","ele","className","hidden","selected","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Everything/College/Sem III/Projects/FinSync/react_frontend/src/CityFinder.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nfunction CityFinder() {\r\n    const [options, setOptions] = useState([]);\r\n    const [stateOptions, setStateOptions] = useState([]);\r\n    const [cityOptions, setCityOptions] = useState([]);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch('https://raw.githubusercontent.com/dr5hn/countries-states-cities-database/master/countries%2Bstates%2Bcities.json');\r\n                if (!response.ok) {\r\n                    throw new Error(\"Network error\")\r\n                }\r\n                const data = await response.json();\r\n                setOptions(data)\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    function setState(element) {\r\n        setStateOptions([]);\r\n        setCityOptions([]);\r\n        const selectedCountry = options.find((val) => val.name === element.target.value);\r\n        if (selectedCountry.states.length === 0) {\r\n            selectedCountry.states[0] = { id: \"NoState\", name: selectedCountry.name, cities: [] }\r\n            console.log(selectedCountry.states[0]);\r\n        }\r\n        setStateOptions(selectedCountry.states);\r\n    }\r\n\r\n    function setCity(element) {\r\n        const selectedStates = stateOptions.find((val) => val.name === element.target.value);\r\n        if (selectedStates.cities.length === 0) { selectedStates.cities[0] = { id: \"NoCity\", name: selectedStates.name }; }\r\n        setCityOptions(selectedStates.cities);\r\n    }\r\n\r\n    return <>\r\n        <select onChange={(ele) => setState(ele)} className=\"Countries\">\r\n            <option key=\"SelectCity\" hidden selected>--- Select a Country ---</option>\r\n            {\r\n                options.map(element => {\r\n                    return <option key={element.id}>{element.name}</option>\r\n                })\r\n            }\r\n        </select>\r\n        <select onChange={(ele) => setCity(ele)} hidden={stateOptions.length > 0 ? false : true} className=\"State\">\r\n            <option key=\"SelectCity\" hidden selected>--- Select a State ---</option>\r\n            {\r\n                stateOptions.map(element => {\r\n                    return <option key={element.id}>{element.name}</option>\r\n                })\r\n            }\r\n        </select>\r\n        <select hidden={cityOptions.length > 0 ? false : true} className=\"City\">\r\n            <option key=\"SelectCity\" hidden selected>--- Select a City ---</option>\r\n            {\r\n                cityOptions.map(element => {\r\n                    return <option key={element.id}>{element.name}</option>\r\n                })\r\n            }\r\n        </select>\r\n    </>\r\n}\r\n\r\nexport default CityFinder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}