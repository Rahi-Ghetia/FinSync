{"ast":null,"code":"var _jsxFileName = \"C:\\\\Everything\\\\College\\\\Sem III\\\\Projects\\\\FinSync\\\\react_frontend\\\\src\\\\RevenuePage.jsx\",\n  _s = $RefreshSig$();\nimport Chart from 'chart.js/auto';\nimport { Bar, Doughnut, Line } from \"react-chartjs-2\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RevenuePage(props) {\n  _s();\n  const [purchaseList, setPurchaseList] = useState([]);\n  const [salesList, setSalesList] = useState([]);\n  useEffect(() => {\n    const getDataForSalesList = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/getpurchaseorderlist/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"username\": props.username\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Fetching Error');\n        }\n        const data = await response.json();\n        setPurchaseList(() => data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getDataForSalesList();\n  }, []);\n  const handleNewPurchaseSubmit = e => {\n    e.preventDefault();\n    const postDataForPurchaseList = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/purchaseorderlist/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"username\": props.username,\n            \"purchase_num\": purchase_num,\n            \"purchase_date\": purchase_date,\n            \"product_name\": product_name,\n            \"product_quan\": product_quan,\n            \"ship_date\": ship_date,\n            \"product_cost\": product_cost\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Fetching Error');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n      const getDataForPurchaseList = async () => {\n        try {\n          const response = await fetch('http://localhost:8000/getpurchaseorderlist/', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              \"username\": props.username\n            })\n          });\n          if (!response.ok) {\n            throw new Error('Fetching Error');\n          }\n          const data = await response.json();\n          setPurchaseList(() => data);\n          console.log(purchaseList);\n        } catch (error) {\n          console.error(error);\n        }\n      };\n      getDataForPurchaseList();\n    };\n    postDataForPurchaseList();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"constainer-fluid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(RevenuePage, \"9yLjSLfBIOmfxV4qUYazoJEJ4iA=\");\n_c = RevenuePage;\nexport default RevenuePage;\nvar _c;\n$RefreshReg$(_c, \"RevenuePage\");","map":{"version":3,"names":["Chart","Bar","Doughnut","Line","React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","RevenuePage","props","_s","purchaseList","setPurchaseList","salesList","setSalesList","getDataForSalesList","response","fetch","method","headers","body","JSON","stringify","username","ok","Error","data","json","error","console","handleNewPurchaseSubmit","e","preventDefault","postDataForPurchaseList","purchase_num","purchase_date","product_name","product_quan","ship_date","product_cost","getDataForPurchaseList","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Everything/College/Sem III/Projects/FinSync/react_frontend/src/RevenuePage.jsx"],"sourcesContent":["import Chart from 'chart.js/auto';\r\nimport { Bar, Doughnut, Line } from \"react-chartjs-2\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nfunction RevenuePage(props) {\r\n\r\n    const [purchaseList, setPurchaseList] = useState([]);\r\n    const [salesList, setSalesList] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const getDataForSalesList = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:8000/getpurchaseorderlist/', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ \"username\": props.username }),\r\n                });\r\n                if (!response.ok) {\r\n                    throw new Error('Fetching Error')\r\n                }\r\n                const data = await response.json();\r\n\r\n                setPurchaseList(() => data);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        getDataForSalesList();\r\n    }, []);\r\n\r\n\r\n    const handleNewPurchaseSubmit = (e) => {\r\n        e.preventDefault();\r\n        const postDataForPurchaseList = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:8000/purchaseorderlist/', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ \"username\": props.username, \"purchase_num\": purchase_num, \"purchase_date\": purchase_date, \"product_name\": product_name, \"product_quan\": product_quan, \"ship_date\": ship_date, \"product_cost\": product_cost }),\r\n                });\r\n                if (!response.ok) {\r\n                    throw new Error('Fetching Error')\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n            const getDataForPurchaseList = async () => {\r\n                try {\r\n                    const response = await fetch('http://localhost:8000/getpurchaseorderlist/', {\r\n                        method: 'POST',\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        body: JSON.stringify({ \"username\": props.username }),\r\n                    });\r\n                    if (!response.ok) {\r\n                        throw new Error('Fetching Error')\r\n                    }\r\n                    const data = await response.json();\r\n                    setPurchaseList(() => data);\r\n                    console.log(purchaseList);\r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n            };\r\n            getDataForPurchaseList();\r\n        };\r\n        postDataForPurchaseList();\r\n\r\n    }\r\n\r\n    return (<>\r\n        <div className=\"constainer-fluid\">\r\n            {/* <div className=\"container-fluid p-0\">\r\n                <nav className=\"navbar bg-body-tertiary border-bottom\">\r\n                    <div className=\"container-fluid\">\r\n                        <label className=\"nabar-brand ms-2 fs-1\" style={{ fontWeight: \"400\" }}>\r\n                            Purchase&nbsp;Overview\r\n                        </label>\r\n                        <ul className=\"navbar-nav flex-row ms-auto\">\r\n                            <li className=\"nav-item m-1\">\r\n                                <button className=\"btn btn-primary px-4 py-1\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#newPurchaseModal\">\r\n                                    <i className=\"bi bi-plus-lg\"></i>&nbsp;New\r\n                                </button>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n\r\n            <div className=\"modal fade\" id=\"newPurchaseModal\" tabindex=\"-1\" aria-labelledby=\"newPurchaseModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog modal-dialog-centered modal-lg \">\r\n                    <div className=\"modal-content shadow-lg\">\r\n                        <div className=\"modal-header bg-secondary bg-gradient\">\r\n                            <h1 className=\"modal-title fs-3\" id=\"newPurchaseModalLabel\">Add&nbsp;New&nbsp;Sales&nbsp;Order</h1>\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <div className=\"modal-body bg-secondary-subtle rounded-bottom\">\r\n                            <form onSubmit={handleNewPurchaseSubmit}>\r\n                                <div className=\"row fs-4 mt-3\">\r\n                                    <div className=\"col-4\">\r\n                                        Purchase&nbsp;Order&nbsp;No.\r\n                                    </div>\r\n                                    <div className=\"col-7\">\r\n                                        <input type=\"text\" value={purchase_num} onChange={(e) => setPurchaseNum(() => e.target.value)} name=\"\" id=\"\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row fs-4 mt-4\">\r\n                                    <div className=\"col-4\">\r\n                                        Purchase&nbsp;Order&nbsp;Date\r\n                                    </div>\r\n                                    <div className=\"col-7\">\r\n                                        <input type=\"date\" value={purchase_date} onChange={(e) => setPurchaseDate(() => e.target.value)} name=\"\" id=\"\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row fs-4 mt-4\">\r\n                                    <div className=\"col-4\">\r\n                                        Product&nbsp;Name\r\n                                    </div>\r\n                                    <div className=\"col-7\">\r\n                                        <input type=\"text\" value={product_name} onChange={(e) => setProductName(() => e.target.value)} name=\"\" id=\"\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row fs-4 mt-4\">\r\n                                    <div className=\"col-4\">\r\n                                        Product&nbsp;Quantity\r\n                                    </div>\r\n                                    <div className=\"col-7\">\r\n                                        <input type=\"text\" value={product_quan} onChange={(e) => setProductQuan(() => e.target.value)} name=\"\" id=\"\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row fs-4 mt-4\">\r\n                                    <div className=\"col-4\">\r\n                                        Expected&nbsp;Shipment Date\r\n                                    </div>\r\n                                    <div className=\"col-7\">\r\n                                        <input type=\"date\" value={ship_date} onChange={(e) => setShipDate(() => e.target.value)} name=\"\" id=\"\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row fs-4 mt-4\">\r\n                                    <div className=\"col-4\">\r\n                                        Product&nbsp;Cost\r\n                                    </div>\r\n                                    <div className=\"col-7\">\r\n                                        <input type=\"text\" value={product_cost} onChange={(e) => setProductCost(() => e.target.value)} name=\"\" id=\"\" className=\"form-control\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row fs-4 mt-4\">\r\n                                    <div className=\"col-6 text-end\">\r\n                                        <button type=\"submit\" className=\"btn btn-success px-5 py-1\" data-bs-dismiss=\"modal\">\r\n                                            Add\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"col-6 text-start\">\r\n                                        <button type=\"button\" className=\"btn px-4 btn-secondary px-5 py-1\" data-bs-dismiss=\"modal\">Cancel</button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container w-50\">\r\n                <Bar\r\n                    data={{\r\n                        labels: (purchaseList.map((data) => data.purchase_date)),\r\n                        datasets: [\r\n                            {\r\n                                label: \"Sales\",\r\n                                data: purchaseList.map((data) => ((data.product_quan * data.product_cost))),\r\n                                backgroundColor: [\"rgb(132,120,191)\", \"rgb(246,161,146)\", \"rgb(255,235,142)\", \"rgb(234,88,39)\",],\r\n                                borderColor: \"blue\",\r\n                                borderRadius: 10,\r\n                            },\r\n                        ],\r\n                    }}\r\n                    options={{\r\n                        elements: {\r\n                            line: {\r\n                                tension: 0.5,\r\n                            },\r\n                        },\r\n                        plugins: {\r\n                            title: {\r\n                                text: \"Monthly Revenue & Cost\",\r\n                            },\r\n                        },\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"container-fluid p-0\">\r\n                <div className=\"table-responsive my-5\">\r\n                    <table className=\"table table-hover text-center\">\r\n                        <thead>\r\n                            <tr className=\"fs-4\">\r\n                                <th>Date <label htmlFor=\"\" className=\"fs-6\">[YYYY-MM-DD]</label></th>\r\n                                <th>Sales&nbsp;Order&nbsp;No.</th>\r\n                                <th>Product&nbsp;Name</th>\r\n                                <th>Product&nbsp;Quantity</th>\r\n                                <th>Expected&nbsp;Shipment&nbsp;Date</th>\r\n                                <th>Product&nbsp;Cost</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {purchaseList.map(element => {\r\n                                return (\r\n                                    <tr className=\"fs-5 text-center\" key={element.id}>\r\n                                        <td>{element.purchase_date}</td>\r\n                                        <td>{element.purchase_num}</td>\r\n                                        <td>{element.product_name}</td>\r\n                                        <td>{element.product_quan}</td>\r\n                                        <td>{element.ship_date}</td>\r\n                                        <td>{element.product_cost}</td>\r\n                                    </tr>\r\n                                );\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div> */}\r\n\r\n        </div>\r\n    </>);\r\n}\r\nexport default RevenuePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}