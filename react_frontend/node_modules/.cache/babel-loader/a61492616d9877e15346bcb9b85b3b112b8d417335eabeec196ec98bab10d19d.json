{"ast":null,"code":"var _jsxFileName = \"C:\\\\Everything\\\\College\\\\Sem III\\\\Projects\\\\FinSync\\\\react_frontend\\\\src\\\\CityFinder.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CityFinder({\n  styles\n}) {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [level, setLevel] = useState(\"Country\");\n  const [CountrySelected, setSelectedCountry] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://raw.githubusercontent.com/dr5hn/countries-states-cities-database/master/countries%2Bstates%2Bcities.json');\n        if (!response.ok) {\n          throw new Error(\"There was an issue in fetching data.\");\n        }\n        const data = await response.json();\n        setCountries(data);\n        setOptions(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  function setArray(name, level) {\n    if (name === \"--- Change the Country ---\") {\n      setLevel(\"Country\");\n      setOptions(countries);\n      console.log(\"Change Country For State\");\n    } else if (name === \"--- Change the State ---\") {\n      setLevel(\"State\");\n      setOptions(CountrySelected.states);\n      console.log(\"Change State For City\");\n    } else {\n      options.map(element => {\n        if (element.name == name) {\n          if (level === \"Country\") {\n            setLevel(\"State\");\n            setSelectedCountry(element);\n            setOptions(element.states);\n          } else if (level === \"State\") {\n            setLevel(\"City\");\n            setOptions(element.cities);\n          }\n        }\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setArray(e.target.value, level),\n      style: styles,\n      children: [level === \"Country\" && /*#__PURE__*/_jsxDEV(\"option\", {\n        selected: true,\n        hidden: true,\n        children: \"--- Select a Country ---\"\n      }, \"SetCountry\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), level === \"State\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          hidden: true,\n          children: \"--- Select a State ---\"\n        }, \"SetState\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"--- Change the Country ---\"\n        }, \"SetCountry\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), level === \"City\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          hidden: true,\n          children: \"--- Select a City ---\"\n        }, \"SetCity\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"--- Change the Country ---\"\n        }, \"SetCountry\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"--- Change the State ---\"\n        }, \"SetState\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), options.map(element => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: element.name\n        }, element.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 24\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(CityFinder, \"Zyp2GlBjvFQ2JeLOcDfqRpU135U=\");\n_c = CityFinder;\nexport default CityFinder;\nvar _c;\n$RefreshReg$(_c, \"CityFinder\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","CityFinder","styles","_s","countries","setCountries","options","setOptions","level","setLevel","CountrySelected","setSelectedCountry","fetchData","response","fetch","ok","Error","data","json","error","console","setArray","name","log","states","map","element","cities","children","onChange","e","target","value","style","selected","hidden","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Everything/College/Sem III/Projects/FinSync/react_frontend/src/CityFinder.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction CityFinder({styles}) {\r\n    const [countries, setCountries] = useState([]);\r\n    const [options, setOptions] = useState([]);\r\n    const [level, setLevel] = useState(\"Country\")\r\n    const [CountrySelected, setSelectedCountry] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch('https://raw.githubusercontent.com/dr5hn/countries-states-cities-database/master/countries%2Bstates%2Bcities.json');\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(\"There was an issue in fetching data.\");\r\n                }\r\n\r\n                const data = await response.json();\r\n                setCountries(data);\r\n                setOptions(data);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    function setArray(name, level) {\r\n        if (name === \"--- Change the Country ---\") {\r\n            setLevel(\"Country\");\r\n            setOptions(countries);\r\n            console.log(\"Change Country For State\");\r\n        } else if (name === \"--- Change the State ---\") {\r\n            setLevel(\"State\");\r\n            setOptions(CountrySelected.states);\r\n            console.log(\"Change State For City\");\r\n        } else {\r\n\r\n            options.map(element => {\r\n                if (element.name == name) {\r\n                    if (level === \"Country\") {\r\n                        setLevel(\"State\");\r\n                        setSelectedCountry(element)\r\n                        setOptions(element.states);\r\n                    } else if (level === \"State\") {\r\n                        setLevel(\"City\");\r\n                        setOptions(element.cities);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    return <>\r\n        <select onChange={(e) => setArray(e.target.value, level)} style={styles}>\r\n            {level === \"Country\" && (\r\n                <option key={\"SetCountry\"} selected={true} hidden={true}>--- Select a Country ---</option>\r\n            )}\r\n            {level === \"State\" && (<>\r\n                <option key={\"SetState\"} selected={true} hidden={true}>--- Select a State ---</option>\r\n                <option key={\"SetCountry\"}>--- Change the Country ---</option>\r\n            </>\r\n            )}\r\n            {level === \"City\" && (<>\r\n                <option key={\"SetCity\"} selected={true} hidden={true}>--- Select a City ---</option>\r\n                <option key={\"SetCountry\"}>--- Change the Country ---</option>\r\n                <option key={\"SetState\"}>--- Change the State ---</option>\r\n            </>\r\n            )}\r\n            {options.map(element => {\r\n                return <option key={element.id}>{element.name}</option>;\r\n            })}\r\n        </select>\r\n    </>\r\n}\r\nexport default CityFinder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}